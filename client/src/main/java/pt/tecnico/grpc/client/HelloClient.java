package pt.tecnico.grpc.client;

/* these imported classes are generated by the hello-world-server contract */
import pt.tecnico.grpc.HelloWorld;
import pt.tecnico.grpc.HelloWorldServiceGrpc;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;

import java.util.ArrayList;
import java.util.List;

public class HelloClient {

	private static final int NUM_SERVERS = 2;

	public static void main(String[] args) throws Exception {
		System.out.println(HelloClient.class.getSimpleName());

		// receive and print arguments
		System.out.printf("Received %d arguments%n", args.length);
		for (int i = 0; i < args.length; i++) {
			System.out.printf("arg[%d] = %s%n", i, args[i]);
		}

		// check arguments
		if (args.length < 2) {
			System.err.println("Argument(s) missing!");
			System.err.printf("Usage: java %s host port%n", HelloClient.class.getName());
			return;
		}

		final String host = args[0];
		final int port = Integer.parseInt(args[1]);

		List<ManagedChannel> channels = new ArrayList<>();
		List<HelloWorldServiceGrpc.HelloWorldServiceStub> stubs = new ArrayList<>();
		for (int i = 0; i < NUM_SERVERS; i++) {
			final String target = host + ":" + (port + i);
			ManagedChannel channel = ManagedChannelBuilder.forTarget(target).usePlaintext().build();
			channels.add(channel);
			stubs.add(HelloWorldServiceGrpc.newStub(channel));
		}

		ResponseCollector collector = new ResponseCollector();
		for (int i = 0; i < NUM_SERVERS; i++) {
			String name = "friend" + i;
			if (i == 0)
				name = "Alice";
			else
				name = "Bob";
			HelloWorld.HelloRequest request = HelloWorld.HelloRequest.newBuilder().setName(name).build();
			stubs.get(i).greeting(request, new HelloObserver(collector));
		}

		collector.waitAllResponses(NUM_SERVERS);
		//collector.waitAllResponses(1);
		List<String> responses = collector.getResponses();
        for (String response : responses) System.out.println(response);

		for (int i = 0; i < NUM_SERVERS; i++) {
			System.out.println("Shutting down: " + channels.get(i));
			channels.get(i).shutdown();
		}
	}

}
